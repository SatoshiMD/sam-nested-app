AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 5

Parameters:
  ENV:
    Type: String
    Default: satoshi

Resources:
  SampleLambdaIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
        - PolicyName: sample-lambda-role
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 's3:*'
                Resource: "*"
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                  - lambda:AddPermission
                Resource: '*'
  SampleBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "sample-bucket-for-nested-sam"
  SampleRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: "Sample rest api"
      Name: SampleRestApi
  SampleProxyResource:
    Type: 'AWS::ApiGateway::Resource'
    DependsOn:
      - SampleRestApi
    Properties:
      RestApiId: !Ref SampleRestApi
      ParentId: !GetAtt 
        - SampleRestApi
        - RootResourceId
      PathPart: '{proxy+}'
  SampleApiMethod:
    Type: AWS::ApiGateway::Method
    DependsOn:
      - SampleProxyResource
    Properties:
      RestApiId: !Ref SampleRestApi
      ResourceId: !Ref SampleProxyResource
      HttpMethod: ANY
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
            method.response.header.Access-Control-Allow-Methods: '''OPTIONS,PUT,POST,GET,DELETE'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
          ResponseTemplates:
            application/json: ''
          StatusCode: '200'
        RequestTemplates:
          application/json: '{statusCode:200}'
        Type: MOCK
      MethodResponses:
      - ResponseModels: {}
        ResponseParameters:
          method.response.header.Access-Control-Allow-Headers: true
          method.response.header.Access-Control-Allow-Methods: true
          method.response.header.Access-Control-Allow-Origin: true
        StatusCode: '200'
  SampleDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - SampleApiMethod
    Properties:
      RestApiId: !Ref SampleRestApi
      Description: Sample deployment
      StageName: !Ref ENV
  SampleMyLayer:
    Type: AWS::Serverless::Application
    Properties:
      Location: common-layer-sample/template.yaml
      Parameters:
        ENV: !Ref ENV
  SampleMyLambdas:
    Type: AWS::Serverless::Application
    DependsOn:
      - SampleLambdaIAMRole
      - SampleDeployment
      - SampleMyLayer
      - SampleBucket
    Properties:
      Location: sam-lambda-sample/template.yaml
      Parameters:
        ENV: !Ref ENV
        SamplebucketName: !Ref SampleBucket
        SamplebucketArn: !GetAtt SampleBucket.Arn
        SampleRoleArn: !GetAtt SampleLambdaIAMRole.Arn
        SampleRestApiId: !Ref SampleRestApi
        RootApiResourceId: !Ref  SampleRestApi
  SampleMyAnotherLambdas:
    Type: AWS::Serverless::Application
    DependsOn:
      - SampleLambdaIAMRole
      - SampleRestApi
      - SampleDeployment
      - SampleMyLayer
      - SampleBucket
    Properties:
      Location: sam-lambda-another-lambda/template.yaml
      Parameters:
        ENV: !Ref ENV
        SamplebucketName: !Ref SampleBucket
        SamplebucketArn: !GetAtt SampleBucket.Arn
        SampleRoleArn: !GetAtt SampleLambdaIAMRole.Arn
        # SampleRestApiId: !Ref SampleRestApi
        # RootApiResourceId: !GetAtt  SampleRestApi.RootResourceId

Outputs:
  SampleRestApi:
    Description: "SampleRestApi"
    Value: !Ref SampleRestApi
  # SampleProxyResource:
  #   Description: "SampleProxyResource"
  #   Value: !Ref SampleProxyResource
  # SampleApiMethod:
  #   Description: "SampleApiMethod"
  #   Value: !Ref SampleApiMethod
  SampleLambdaIAMRole:
    Description: "Sample Role ARN"
    Value: !GetAtt SampleLambdaIAMRole.Arn
  SampleMyLayer:
    Description: "Sample Layer ARN"
    Value: !Ref SampleMyLayer
  SampleMyLambdas:
    Description: "Sample My Lambdas ARN"
    Value: !Ref SampleMyLambdas
